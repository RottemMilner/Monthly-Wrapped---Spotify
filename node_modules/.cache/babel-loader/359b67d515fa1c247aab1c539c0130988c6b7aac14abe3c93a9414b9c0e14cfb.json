{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmiln\\\\my-app\\\\src\\\\components\\\\RecentlyPlayed.js\",\n  _s = $RefreshSig$();\n// components/RecentlyPlayed/RecentlyPlayed.js\n\nimport React, { useState, useEffect } from 'react';\nimport spotifyApi from '../spotifyAuth';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecentlyPlayed({\n  setFavorites\n}) {\n  _s();\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const [showHeadline, setShowHeadline] = useState(false);\n  useEffect(() => {\n    // Fetch the user's recently played tracks\n    spotifyApi.getMyRecentlyPlayedTracks({\n      limit: 50\n    }).then(response => {\n      setRecentlyPlayed(response.items);\n      setShowHeadline(true); // Set to true after fetching data\n    });\n  }, []);\n  const handleAddToFavorites = track => {\n    setFavorites(prevFavorites => [...prevFavorites, track]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showHeadline && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recently Played\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"recently-played-list\",\n      children: recentlyPlayed.map(track => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"recently-played-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: track.track.album.images[2].url // Assuming you want to display the album art\n          ,\n          alt: track.track.name,\n          className: \"album-art\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"track-name\",\n            children: track.track.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"artists\",\n            children: track.track.artists.map(artist => artist.name).join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddToFavorites(track.track),\n            className: \"add-to-favorites-button\",\n            children: \"Add to Favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, track.track.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(RecentlyPlayed, \"uP+6Wb/pSo8b4nJfjFHty1ELllE=\");\n_c = RecentlyPlayed;\nRecentlyPlayed.propTypes = {\n  setFavorites: PropTypes.func.isRequired\n};\nexport default RecentlyPlayed;\nvar _c;\n$RefreshReg$(_c, \"RecentlyPlayed\");","map":{"version":3,"names":["React","useState","useEffect","spotifyApi","PropTypes","jsxDEV","_jsxDEV","RecentlyPlayed","setFavorites","_s","recentlyPlayed","setRecentlyPlayed","showHeadline","setShowHeadline","getMyRecentlyPlayedTracks","limit","then","response","items","handleAddToFavorites","track","prevFavorites","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","src","album","images","url","alt","name","artists","artist","join","onClick","id","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["C:/Users/nmiln/my-app/src/components/RecentlyPlayed.js"],"sourcesContent":["// components/RecentlyPlayed/RecentlyPlayed.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport spotifyApi from '../spotifyAuth';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction RecentlyPlayed({ setFavorites }) {\r\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\r\n  const [showHeadline, setShowHeadline] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch the user's recently played tracks\r\n    spotifyApi.getMyRecentlyPlayedTracks({ limit: 50 }).then((response) => {\r\n      setRecentlyPlayed(response.items);\r\n      setShowHeadline(true); // Set to true after fetching data\r\n    });\r\n  }, []);\r\n\r\n  const handleAddToFavorites = (track) => {\r\n    setFavorites((prevFavorites) => [...prevFavorites, track]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showHeadline && <h2>Recently Played</h2>}\r\n      <ul className=\"recently-played-list\">\r\n        {recentlyPlayed.map((track) => (\r\n          <li key={track.track.id} className=\"recently-played-item\">\r\n            <img\r\n              src={track.track.album.images[2].url} // Assuming you want to display the album art\r\n              alt={track.track.name}\r\n              className=\"album-art\"\r\n            />\r\n            <div className=\"track-info\">\r\n              <p className=\"track-name\">{track.track.name}</p>\r\n              <p className=\"artists\">{track.track.artists.map((artist) => artist.name).join(', ')}</p>\r\n              <button onClick={() => handleAddToFavorites(track.track)} className=\"add-to-favorites-button\">Add to Favorites</button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nRecentlyPlayed.propTypes = {\r\n  setFavorites: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default RecentlyPlayed;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}