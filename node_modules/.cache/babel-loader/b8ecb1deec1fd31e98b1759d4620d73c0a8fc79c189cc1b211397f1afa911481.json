{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmiln\\\\OneDrive\\\\Desktop\\\\my-app\\\\src\\\\components\\\\TopArtists.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport spotifyApi from '../spotifyAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TopArtists() {\n  _s();\n  const [topArtists, setTopArtists] = useState([]);\n  const [currentArtistIndex, setCurrentArtistIndex] = useState(0);\n  useEffect(() => {\n    // Fetch the user's top artists\n    spotifyApi.getMyTopArtists({\n      limit: 20,\n      time_range: 'short_term'\n    }).then(response => {\n      setTopArtists(response.items);\n\n      // Set up interval to change artist every 2 seconds\n      const intervalId = setInterval(() => {\n        setCurrentArtistIndex(prevIndex => (prevIndex + 1) % response.items.length);\n      }, 2000);\n\n      // Clear the interval when the component unmounts or when topArtists changes\n      return () => clearInterval(intervalId);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slideshow\",\n    children: topArtists.map((artist, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `artist-slide ${index === currentArtistIndex ? 'active' : ''}`,\n      style: {\n        backgroundImage: `url(${artist.images.length > 0 ? artist.images[0].url : ''})`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"artist-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"artist-name\",\n            children: artist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, artist.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(TopArtists, \"IyB4So4Scs77XN9FYM8lG9BmCbg=\");\n_c = TopArtists;\nexport default TopArtists;\nvar _c;\n$RefreshReg$(_c, \"TopArtists\");","map":{"version":3,"names":["React","useState","useEffect","spotifyApi","jsxDEV","_jsxDEV","TopArtists","_s","topArtists","setTopArtists","currentArtistIndex","setCurrentArtistIndex","getMyTopArtists","limit","time_range","then","response","items","intervalId","setInterval","prevIndex","length","clearInterval","className","children","map","artist","index","style","backgroundImage","images","url","name","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/nmiln/OneDrive/Desktop/my-app/src/components/TopArtists.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport spotifyApi from '../spotifyAuth';\r\n\r\nfunction TopArtists() {\r\n  const [topArtists, setTopArtists] = useState([]);\r\n  const [currentArtistIndex, setCurrentArtistIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Fetch the user's top artists\r\n    spotifyApi.getMyTopArtists({ limit: 20, time_range: 'short_term' }).then((response) => {\r\n      setTopArtists(response.items);\r\n\r\n      // Set up interval to change artist every 2 seconds\r\n      const intervalId = setInterval(() => {\r\n        setCurrentArtistIndex((prevIndex) => (prevIndex + 1) % response.items.length);\r\n      }, 2000);\r\n\r\n      // Clear the interval when the component unmounts or when topArtists changes\r\n      return () => clearInterval(intervalId);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"slideshow\">\r\n      {topArtists.map((artist, index) => (\r\n        <div\r\n          key={artist.id}\r\n          className={`artist-slide ${index === currentArtistIndex ? 'active' : ''}`}\r\n          style={{\r\n            backgroundImage: `url(${artist.images.length > 0 ? artist.images[0].url : ''})`,\r\n          }}\r\n        >\r\n          <div className=\"overlay\">\r\n            <div className=\"artist-info\">\r\n              <p className=\"artist-name\">{artist.name}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopArtists;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAE/DC,SAAS,CAAC,MAAM;IACd;IACAC,UAAU,CAACS,eAAe,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAa,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACrFP,aAAa,CAACO,QAAQ,CAACC,KAAK,CAAC;;MAE7B;MACA,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;QACnCR,qBAAqB,CAAES,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIJ,QAAQ,CAACC,KAAK,CAACI,MAAM,CAAC;MAC/E,CAAC,EAAE,IAAI,CAAC;;MAER;MACA,OAAO,MAAMC,aAAa,CAACJ,UAAU,CAAC;IACxC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBhB,UAAU,CAACiB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC5BtB,OAAA;MAEEkB,SAAS,EAAG,gBAAeI,KAAK,KAAKjB,kBAAkB,GAAG,QAAQ,GAAG,EAAG,EAAE;MAC1EkB,KAAK,EAAE;QACLC,eAAe,EAAG,OAAMH,MAAM,CAACI,MAAM,CAACT,MAAM,GAAG,CAAC,GAAGK,MAAM,CAACI,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,GAAG,EAAG;MAC/E,CAAE;MAAAP,QAAA,eAEFnB,OAAA;QAAKkB,SAAS,EAAC,SAAS;QAAAC,QAAA,eACtBnB,OAAA;UAAKkB,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC1BnB,OAAA;YAAGkB,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEE,MAAM,CAACM;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC,GAVDV,MAAM,CAACW,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWX,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC7B,EAAA,CAtCQD,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAwCnB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}