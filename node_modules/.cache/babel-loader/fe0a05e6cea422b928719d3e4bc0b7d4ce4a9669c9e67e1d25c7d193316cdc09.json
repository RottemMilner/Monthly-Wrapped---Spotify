{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmiln\\\\my-app\\\\src\\\\components\\\\CurrentlyPlaying.js\",\n  _s = $RefreshSig$();\n// CurrentlyPlaying.js\n\nimport React, { useState, useEffect } from 'react';\nimport spotifyApi from '../spotifyAuth';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CurrentlyPlaying({\n  setFavorites\n}) {\n  _s();\n  const [currentTrack, setCurrentTrack] = useState(null);\n  const [favorites, setFavoritesState] = useState([]);\n  useEffect(() => {\n    // Load favorites from localStorage on component mount\n    const storedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    setFavoritesState(storedFavorites);\n    setFavorites(storedFavorites);\n\n    // Fetch the user's currently playing track\n    spotifyApi.getMyCurrentPlayingTrack().then(response => {\n      setCurrentTrack(response.item);\n    });\n  }, [setFavorites]);\n  const isTrackInFavorites = track => {\n    return favorites && favorites.some(fav => fav.id === track.id);\n  };\n  const handleAddToFavorites = track => {\n    setFavoritesState(prevFavorites => {\n      const newFavorites = Array.isArray(prevFavorites) ? [...prevFavorites] : [];\n      newFavorites.push(track);\n      localStorage.setItem('favorites', JSON.stringify(newFavorites)); // Save to localStorage\n      return newFavorites;\n    });\n    setFavorites(prevFavorites => {\n      const newFavorites = Array.isArray(prevFavorites) ? [...prevFavorites] : [];\n      newFavorites.push(track);\n      return newFavorites;\n    });\n  };\n  const handleRemoveFromFavorites = track => {\n    setFavoritesState(prevFavorites => {\n      const newFavorites = Array.isArray(prevFavorites) ? prevFavorites.filter(fav => fav.id !== track.id) : [];\n      localStorage.setItem('favorites', JSON.stringify(newFavorites)); // Save to localStorage\n      return newFavorites;\n    });\n    setFavorites(prevFavorites => {\n      return Array.isArray(prevFavorites) ? prevFavorites.filter(fav => fav.id !== track.id) : [];\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Currently Playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), currentTrack && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentTrack.album.images[0].url,\n        alt: currentTrack.name,\n        className: \"album-art-currently\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"track-name\",\n          children: currentTrack.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"artists\",\n          children: currentTrack.artists.map(artist => artist.name).join(', ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), isTrackInFavorites(currentTrack) ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveFromFavorites(currentTrack),\n          className: \"remove-from-favorites-button\",\n          children: \"Remove from Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddToFavorites(currentTrack),\n          className: \"add-to-favorites-button\",\n          children: \"Add to Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), !currentTrack && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No track currently playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(CurrentlyPlaying, \"U5gsBpgXZK2s6mceS51Rz209enI=\");\n_c = CurrentlyPlaying;\nCurrentlyPlaying.propTypes = {\n  setFavorites: PropTypes.func.isRequired\n};\nexport default CurrentlyPlaying;\nvar _c;\n$RefreshReg$(_c, \"CurrentlyPlaying\");","map":{"version":3,"names":["React","useState","useEffect","spotifyApi","PropTypes","jsxDEV","_jsxDEV","CurrentlyPlaying","setFavorites","_s","currentTrack","setCurrentTrack","favorites","setFavoritesState","storedFavorites","JSON","parse","localStorage","getItem","getMyCurrentPlayingTrack","then","response","item","isTrackInFavorites","track","some","fav","id","handleAddToFavorites","prevFavorites","newFavorites","Array","isArray","push","setItem","stringify","handleRemoveFromFavorites","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","src","album","images","url","alt","name","className","artists","map","artist","join","onClick","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["C:/Users/nmiln/my-app/src/components/CurrentlyPlaying.js"],"sourcesContent":["// CurrentlyPlaying.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport spotifyApi from '../spotifyAuth';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction CurrentlyPlaying({ setFavorites }) {\r\n  const [currentTrack, setCurrentTrack] = useState(null);\r\n  const [favorites, setFavoritesState] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Load favorites from localStorage on component mount\r\n    const storedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n    setFavoritesState(storedFavorites);\r\n    setFavorites(storedFavorites);\r\n    \r\n    // Fetch the user's currently playing track\r\n    spotifyApi.getMyCurrentPlayingTrack().then((response) => {\r\n      setCurrentTrack(response.item);\r\n    });\r\n  }, [setFavorites]);\r\n\r\n  const isTrackInFavorites = (track) => {\r\n    return favorites && favorites.some((fav) => fav.id === track.id);\r\n  };\r\n\r\n  const handleAddToFavorites = (track) => {\r\n    setFavoritesState((prevFavorites) => {\r\n      const newFavorites = Array.isArray(prevFavorites) ? [...prevFavorites] : [];\r\n      newFavorites.push(track);\r\n      localStorage.setItem('favorites', JSON.stringify(newFavorites)); // Save to localStorage\r\n      return newFavorites;\r\n    });\r\n\r\n    setFavorites((prevFavorites) => {\r\n      const newFavorites = Array.isArray(prevFavorites) ? [...prevFavorites] : [];\r\n      newFavorites.push(track);\r\n      return newFavorites;\r\n    });\r\n  };\r\n\r\n  const handleRemoveFromFavorites = (track) => {\r\n    setFavoritesState((prevFavorites) => {\r\n      const newFavorites = Array.isArray(prevFavorites)\r\n        ? prevFavorites.filter((fav) => fav.id !== track.id)\r\n        : [];\r\n      localStorage.setItem('favorites', JSON.stringify(newFavorites)); // Save to localStorage\r\n      return newFavorites;\r\n    });\r\n\r\n    setFavorites((prevFavorites) => {\r\n      return Array.isArray(prevFavorites)\r\n        ? prevFavorites.filter((fav) => fav.id !== track.id)\r\n        : [];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Currently Playing</h2>\r\n      {currentTrack && (\r\n        <div>\r\n          <img\r\n            src={currentTrack.album.images[0].url}\r\n            alt={currentTrack.name}\r\n            className=\"album-art-currently\"\r\n          />\r\n          <div className=\"track-info\">\r\n            <p className=\"track-name\">{currentTrack.name}</p>\r\n            <p className=\"artists\">{currentTrack.artists.map((artist) => artist.name).join(', ')}</p>\r\n            {isTrackInFavorites(currentTrack) ? (\r\n              <button\r\n                onClick={() => handleRemoveFromFavorites(currentTrack)}\r\n                className=\"remove-from-favorites-button\"\r\n              >\r\n                Remove from Favorites\r\n              </button>\r\n            ) : (\r\n              <button\r\n                onClick={() => handleAddToFavorites(currentTrack)}\r\n                className=\"add-to-favorites-button\"\r\n              >\r\n                Add to Favorites\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!currentTrack && <p>No track currently playing</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nCurrentlyPlaying.propTypes = {\r\n  setFavorites: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CurrentlyPlaying;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,gBAAgB;AACvC,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,gBAAgBA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACW,SAAS,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IAC3EL,iBAAiB,CAACC,eAAe,CAAC;IAClCN,YAAY,CAACM,eAAe,CAAC;;IAE7B;IACAX,UAAU,CAACgB,wBAAwB,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACvDV,eAAe,CAACU,QAAQ,CAACC,IAAI,CAAC;IAChC,CAAC,CAAC;EACJ,CAAC,EAAE,CAACd,YAAY,CAAC,CAAC;EAElB,MAAMe,kBAAkB,GAAIC,KAAK,IAAK;IACpC,OAAOZ,SAAS,IAAIA,SAAS,CAACa,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKH,KAAK,CAACG,EAAE,CAAC;EAClE,CAAC;EAED,MAAMC,oBAAoB,GAAIJ,KAAK,IAAK;IACtCX,iBAAiB,CAAEgB,aAAa,IAAK;MACnC,MAAMC,YAAY,GAAGC,KAAK,CAACC,OAAO,CAACH,aAAa,CAAC,GAAG,CAAC,GAAGA,aAAa,CAAC,GAAG,EAAE;MAC3EC,YAAY,CAACG,IAAI,CAACT,KAAK,CAAC;MACxBP,YAAY,CAACiB,OAAO,CAAC,WAAW,EAAEnB,IAAI,CAACoB,SAAS,CAACL,YAAY,CAAC,CAAC,CAAC,CAAC;MACjE,OAAOA,YAAY;IACrB,CAAC,CAAC;IAEFtB,YAAY,CAAEqB,aAAa,IAAK;MAC9B,MAAMC,YAAY,GAAGC,KAAK,CAACC,OAAO,CAACH,aAAa,CAAC,GAAG,CAAC,GAAGA,aAAa,CAAC,GAAG,EAAE;MAC3EC,YAAY,CAACG,IAAI,CAACT,KAAK,CAAC;MACxB,OAAOM,YAAY;IACrB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMM,yBAAyB,GAAIZ,KAAK,IAAK;IAC3CX,iBAAiB,CAAEgB,aAAa,IAAK;MACnC,MAAMC,YAAY,GAAGC,KAAK,CAACC,OAAO,CAACH,aAAa,CAAC,GAC7CA,aAAa,CAACQ,MAAM,CAAEX,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKH,KAAK,CAACG,EAAE,CAAC,GAClD,EAAE;MACNV,YAAY,CAACiB,OAAO,CAAC,WAAW,EAAEnB,IAAI,CAACoB,SAAS,CAACL,YAAY,CAAC,CAAC,CAAC,CAAC;MACjE,OAAOA,YAAY;IACrB,CAAC,CAAC;IAEFtB,YAAY,CAAEqB,aAAa,IAAK;MAC9B,OAAOE,KAAK,CAACC,OAAO,CAACH,aAAa,CAAC,GAC/BA,aAAa,CAACQ,MAAM,CAAEX,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKH,KAAK,CAACG,EAAE,CAAC,GAClD,EAAE;IACR,CAAC,CAAC;EACJ,CAAC;EAED,oBACErB,OAAA;IAAAgC,QAAA,gBACEhC,OAAA;MAAAgC,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBhC,YAAY,iBACXJ,OAAA;MAAAgC,QAAA,gBACEhC,OAAA;QACEqC,GAAG,EAAEjC,YAAY,CAACkC,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,GAAI;QACtCC,GAAG,EAAErC,YAAY,CAACsC,IAAK;QACvBC,SAAS,EAAC;MAAqB;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFpC,OAAA;QAAK2C,SAAS,EAAC,YAAY;QAAAX,QAAA,gBACzBhC,OAAA;UAAG2C,SAAS,EAAC,YAAY;UAAAX,QAAA,EAAE5B,YAAY,CAACsC;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjDpC,OAAA;UAAG2C,SAAS,EAAC,SAAS;UAAAX,QAAA,EAAE5B,YAAY,CAACwC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAKA,MAAM,CAACJ,IAAI,CAAC,CAACK,IAAI,CAAC,IAAI;QAAC;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACxFnB,kBAAkB,CAACb,YAAY,CAAC,gBAC/BJ,OAAA;UACEgD,OAAO,EAAEA,CAAA,KAAMlB,yBAAyB,CAAC1B,YAAY,CAAE;UACvDuC,SAAS,EAAC,8BAA8B;UAAAX,QAAA,EACzC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,gBAETpC,OAAA;UACEgD,OAAO,EAAEA,CAAA,KAAM1B,oBAAoB,CAAClB,YAAY,CAAE;UAClDuC,SAAS,EAAC,yBAAyB;UAAAX,QAAA,EACpC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EACA,CAAChC,YAAY,iBAAIJ,OAAA;MAAAgC,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAACjC,EAAA,CArFQF,gBAAgB;AAAAgD,EAAA,GAAhBhD,gBAAgB;AAuFzBA,gBAAgB,CAACiD,SAAS,GAAG;EAC3BhD,YAAY,EAAEJ,SAAS,CAACqD,IAAI,CAACC;AAC/B,CAAC;AAED,eAAenD,gBAAgB;AAAC,IAAAgD,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}