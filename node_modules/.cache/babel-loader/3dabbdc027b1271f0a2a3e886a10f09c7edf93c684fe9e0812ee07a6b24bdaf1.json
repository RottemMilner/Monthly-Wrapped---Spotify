{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmiln\\\\my-app\\\\src\\\\components\\\\CurrentlyPlaying.js\",\n  _s = $RefreshSig$();\n// CurrentlyPlaying.js\n\nimport React, { useState, useEffect } from 'react';\nimport spotifyApi from '../spotifyAuth';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CurrentlyPlaying({\n  setFavorites\n}) {\n  _s();\n  const [currentTrack, setCurrentTrack] = useState(null);\n  useEffect(() => {\n    // Fetch the user's currently playing track\n    spotifyApi.getMyCurrentPlayingTrack().then(response => {\n      setCurrentTrack(response.item);\n    });\n  }, []);\n  const handleAddToFavorites = track => {\n    setFavorites(prevFavorites => {\n      const newFavorites = Array.isArray(prevFavorites) ? [...prevFavorites] : [];\n      newFavorites.push(track);\n      localStorage.setItem('favorites', JSON.stringify(newFavorites)); // Save to localStorage\n      return newFavorites;\n    });\n  };\n  const handleRemoveFromFavorites = track => {\n    setFavorites(prevFavorites => {\n      const newFavorites = Array.isArray(prevFavorites) ? prevFavorites.filter(fav => fav.id !== track.id) : [];\n      localStorage.setItem('favorites', JSON.stringify(newFavorites)); // Save to localStorage\n      return newFavorites;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Currently Playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), currentTrack && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentTrack.album.images[0].url,\n        alt: currentTrack.name,\n        className: \"album-art-currently\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"track-name\",\n          children: currentTrack.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"artists\",\n          children: currentTrack.artists.map(artist => artist.name).join(', ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), setFavorites && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveFromFavorites(currentTrack),\n          className: \"remove-from-favorites-button\",\n          children: \"Remove from Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), !setFavorites && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddToFavorites(currentTrack),\n          className: \"add-to-favorites-button\",\n          children: \"Add to Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), !currentTrack && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No track currently playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(CurrentlyPlaying, \"HHi/6zj8nxa3WTxfIvOeEMmOqbc=\");\n_c = CurrentlyPlaying;\nCurrentlyPlaying.propTypes = {\n  setFavorites: PropTypes.func.isRequired\n};\nexport default CurrentlyPlaying;\nvar _c;\n$RefreshReg$(_c, \"CurrentlyPlaying\");","map":{"version":3,"names":["React","useState","useEffect","spotifyApi","PropTypes","jsxDEV","_jsxDEV","CurrentlyPlaying","setFavorites","_s","currentTrack","setCurrentTrack","getMyCurrentPlayingTrack","then","response","item","handleAddToFavorites","track","prevFavorites","newFavorites","Array","isArray","push","localStorage","setItem","JSON","stringify","handleRemoveFromFavorites","filter","fav","id","children","fileName","_jsxFileName","lineNumber","columnNumber","src","album","images","url","alt","name","className","artists","map","artist","join","onClick","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["C:/Users/nmiln/my-app/src/components/CurrentlyPlaying.js"],"sourcesContent":["// CurrentlyPlaying.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport spotifyApi from '../spotifyAuth';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction CurrentlyPlaying({ setFavorites }) {\r\n  const [currentTrack, setCurrentTrack] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch the user's currently playing track\r\n    spotifyApi.getMyCurrentPlayingTrack().then((response) => {\r\n      setCurrentTrack(response.item);\r\n    });\r\n  }, []);\r\n\r\n  const handleAddToFavorites = (track) => {\r\n    setFavorites((prevFavorites) => {\r\n      const newFavorites = Array.isArray(prevFavorites) ? [...prevFavorites] : [];\r\n      newFavorites.push(track);\r\n      localStorage.setItem('favorites', JSON.stringify(newFavorites)); // Save to localStorage\r\n      return newFavorites;\r\n    });\r\n  };\r\n\r\n  const handleRemoveFromFavorites = (track) => {\r\n    setFavorites((prevFavorites) => {\r\n      const newFavorites = Array.isArray(prevFavorites)\r\n        ? prevFavorites.filter((fav) => fav.id !== track.id)\r\n        : [];\r\n      localStorage.setItem('favorites', JSON.stringify(newFavorites)); // Save to localStorage\r\n      return newFavorites;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Currently Playing</h2>\r\n      {currentTrack && (\r\n        <div>\r\n          <img\r\n            src={currentTrack.album.images[0].url}\r\n            alt={currentTrack.name}\r\n            className=\"album-art-currently\"\r\n          />\r\n          <div className=\"track-info\">\r\n            <p className=\"track-name\">{currentTrack.name}</p>\r\n            <p className=\"artists\">{currentTrack.artists.map((artist) => artist.name).join(', ')}</p>\r\n            {setFavorites && (\r\n              <button onClick={() => handleRemoveFromFavorites(currentTrack)} className=\"remove-from-favorites-button\">\r\n                Remove from Favorites\r\n              </button>\r\n            )}\r\n            {!setFavorites && (\r\n              <button onClick={() => handleAddToFavorites(currentTrack)} className=\"add-to-favorites-button\">\r\n                Add to Favorites\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!currentTrack && <p>No track currently playing</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nCurrentlyPlaying.propTypes = {\r\n  setFavorites: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CurrentlyPlaying;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}