{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmiln\\\\OneDrive\\\\Desktop\\\\my-app\\\\src\\\\components\\\\TopArtists.js\",\n  _s = $RefreshSig$();\n// components/TopArtists.js\n\nimport React, { useState, useEffect } from 'react';\nimport spotifyApi from '../spotifyAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TopArtists() {\n  _s();\n  const [topArtists, setTopArtists] = useState([]);\n  const [showHeadline, setShowHeadline] = useState(false);\n  useEffect(() => {\n    // Fetch the user's top artists\n    spotifyApi.getMyTopArtists({\n      limit: 20,\n      time_range: 'short_term'\n    }).then(response => {\n      setTopArtists(response.items);\n      setShowHeadline(true); // Set to true after fetching data\n      carousel();\n    });\n  }, []);\n  function carousel() {\n    var slideIndex = 0;\n    var i;\n    for (i = 0; i < topArtists.length; i++) {\n      topArtists[i].style.display = \"none\";\n    }\n    slideIndex++;\n    if (slideIndex > topArtists.length) {\n      slideIndex = 1;\n    }\n    x[slideIndex - 1].style.display = \"block\";\n    setTimeout(carousel, 2000); // Change image every 2 seconds\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showHeadline && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top Artists This Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"top-artists-list\",\n      children: topArtists.map(artist => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"top-artists-item\",\n        children: [artist.images.length > 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: artist.images[0].url // Assuming you want to display the artist image\n          ,\n          alt: artist.name,\n          className: \"artist-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"artist-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"artist-name\",\n            children: artist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, artist.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(TopArtists, \"TvXvbQoYbieP5KEQ0SQlgWwH9BI=\");\n_c = TopArtists;\nexport default TopArtists;\nvar _c;\n$RefreshReg$(_c, \"TopArtists\");","map":{"version":3,"names":["React","useState","useEffect","spotifyApi","jsxDEV","_jsxDEV","TopArtists","_s","topArtists","setTopArtists","showHeadline","setShowHeadline","getMyTopArtists","limit","time_range","then","response","items","carousel","slideIndex","i","length","style","display","x","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","artist","images","src","url","alt","name","id","_c","$RefreshReg$"],"sources":["C:/Users/nmiln/OneDrive/Desktop/my-app/src/components/TopArtists.js"],"sourcesContent":["// components/TopArtists.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport spotifyApi from '../spotifyAuth';\r\n\r\nfunction TopArtists() {\r\n  const [topArtists, setTopArtists] = useState([]);\r\n  const [showHeadline, setShowHeadline] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch the user's top artists\r\n    spotifyApi.getMyTopArtists({ limit: 20, time_range: 'short_term' }).then((response) => {\r\n      setTopArtists(response.items);\r\n      setShowHeadline(true); // Set to true after fetching data\r\n      carousel();\r\n    });\r\n  }, []);\r\n\r\n  function carousel() {\r\n    var slideIndex = 0;\r\n    var i;\r\n    for (i = 0; i < topArtists.length; i++) {\r\n      topArtists[i].style.display = \"none\";\r\n    }\r\n    slideIndex++;\r\n    if (slideIndex > topArtists.length) {slideIndex = 1}\r\n    x[slideIndex-1].style.display = \"block\";\r\n    setTimeout(carousel, 2000); // Change image every 2 seconds\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {showHeadline && <h2>Top Artists This Month</h2>}\r\n      <ul className=\"top-artists-list\">\r\n        {topArtists.map((artist) => (\r\n          <li key={artist.id} className=\"top-artists-item\">\r\n            {artist.images.length > 0 && (\r\n              <img\r\n                src={artist.images[0].url} // Assuming you want to display the artist image\r\n                alt={artist.name}\r\n                className=\"artist-image\"\r\n              />\r\n            )}\r\n            <div className=\"artist-info\">\r\n              <p className=\"artist-name\">{artist.name}</p>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopArtists;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}