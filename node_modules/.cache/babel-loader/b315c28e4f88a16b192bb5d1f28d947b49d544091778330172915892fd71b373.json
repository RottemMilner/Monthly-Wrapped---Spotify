{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmiln\\\\OneDrive\\\\Desktop\\\\my-app\\\\src\\\\components\\\\TopArtists.js\",\n  _s = $RefreshSig$();\n// components/TopArtists.js\n\nimport React, { useState, useEffect } from 'react';\nimport spotifyApi from '../spotifyAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TopArtists() {\n  _s();\n  const [topArtists, setTopArtists] = useState([]);\n  const [currentArtistIndex, setCurrentArtistIndex] = useState(0);\n  useEffect(() => {\n    // Fetch the user's top artists\n    spotifyApi.getMyTopArtists({\n      limit: 20,\n      time_range: 'short_term'\n    }).then(response => {\n      setTopArtists(response.items);\n    });\n  }, []);\n  useEffect(() => {\n    let interval;\n    const startSlideshow = () => {\n      interval = setInterval(() => {\n        // Update the current artist index for the continuous slide effect\n        setCurrentArtistIndex(currentArtistIndex + 4);\n      }, 2000); // Change slide every 2 seconds\n    };\n    startSlideshow();\n    return () => {\n      clearInterval(interval); // Cleanup the interval on component unmount\n    };\n  }, [topArtists]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"top-artists-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top Artists This Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artist-slideshow\",\n      children: topArtists.map((artist, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `artist-slide ${index === currentArtistIndex ? 'active' : ''}`,\n        style: {\n          backgroundImage: `url(${artist.images.length > 0 ? artist.images[0].url : ''})`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"artist-info\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"artist-name\",\n              children: [artist.name, index, currentArtistIndex]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, artist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(TopArtists, \"cAWKPS37hRtJa6JMewyycoW7bmQ=\");\n_c = TopArtists;\nexport default TopArtists;\nvar _c;\n$RefreshReg$(_c, \"TopArtists\");","map":{"version":3,"names":["React","useState","useEffect","spotifyApi","jsxDEV","_jsxDEV","TopArtists","_s","topArtists","setTopArtists","currentArtistIndex","setCurrentArtistIndex","getMyTopArtists","limit","time_range","then","response","items","interval","startSlideshow","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","artist","index","style","backgroundImage","images","length","url","name","id","_c","$RefreshReg$"],"sources":["C:/Users/nmiln/OneDrive/Desktop/my-app/src/components/TopArtists.js"],"sourcesContent":["// components/TopArtists.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport spotifyApi from '../spotifyAuth';\r\n\r\nfunction TopArtists() {\r\n  const [topArtists, setTopArtists] = useState([]);\r\n  const [currentArtistIndex, setCurrentArtistIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Fetch the user's top artists\r\n    spotifyApi.getMyTopArtists({ limit: 20, time_range: 'short_term' }).then((response) => {\r\n      setTopArtists(response.items);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n\r\n    const startSlideshow = () => {\r\n      interval = setInterval(() => {\r\n        // Update the current artist index for the continuous slide effect\r\n          setCurrentArtistIndex(currentArtistIndex + 4);\r\n      }, 2000); // Change slide every 2 seconds\r\n    };\r\n\r\n    startSlideshow();\r\n\r\n    return () => {\r\n      clearInterval(interval); // Cleanup the interval on component unmount\r\n    };\r\n  }, [topArtists]);\r\n\r\n  return (\r\n    <div className=\"top-artists-container\">\r\n      <h2>Top Artists This Month</h2>\r\n      <div className=\"artist-slideshow\">\r\n        {topArtists.map((artist, index) => (\r\n          <div\r\n            key={artist.id}\r\n            className={`artist-slide ${index === currentArtistIndex ? 'active' : ''}`}\r\n            style={{\r\n              backgroundImage: `url(${artist.images.length > 0 ? artist.images[0].url : ''})`,\r\n            }}\r\n          > \r\n            <div className=\"overlay\">\r\n              <div className=\"artist-info\">\r\n                <p className=\"artist-name\">{artist.name}{index}{currentArtistIndex}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopArtists;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAE/DC,SAAS,CAAC,MAAM;IACd;IACAC,UAAU,CAACS,eAAe,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAa,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACrFP,aAAa,CAACO,QAAQ,CAACC,KAAK,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAENf,SAAS,CAAC,MAAM;IACd,IAAIgB,QAAQ;IAEZ,MAAMC,cAAc,GAAGA,CAAA,KAAM;MAC3BD,QAAQ,GAAGE,WAAW,CAAC,MAAM;QAC3B;QACET,qBAAqB,CAACD,kBAAkB,GAAG,CAAC,CAAC;MACjD,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ,CAAC;IAEDS,cAAc,CAAC,CAAC;IAEhB,OAAO,MAAM;MACXE,aAAa,CAACH,QAAQ,CAAC,CAAC,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,CAACV,UAAU,CAAC,CAAC;EAEhB,oBACEH,OAAA;IAAKiB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpClB,OAAA;MAAAkB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BtB,OAAA;MAAKiB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9Bf,UAAU,CAACoB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC5BzB,OAAA;QAEEiB,SAAS,EAAG,gBAAeQ,KAAK,KAAKpB,kBAAkB,GAAG,QAAQ,GAAG,EAAG,EAAE;QAC1EqB,KAAK,EAAE;UACLC,eAAe,EAAG,OAAMH,MAAM,CAACI,MAAM,CAACC,MAAM,GAAG,CAAC,GAAGL,MAAM,CAACI,MAAM,CAAC,CAAC,CAAC,CAACE,GAAG,GAAG,EAAG;QAC/E,CAAE;QAAAZ,QAAA,eAEFlB,OAAA;UAAKiB,SAAS,EAAC,SAAS;UAAAC,QAAA,eACtBlB,OAAA;YAAKiB,SAAS,EAAC,aAAa;YAAAC,QAAA,eAC1BlB,OAAA;cAAGiB,SAAS,EAAC,aAAa;cAAAC,QAAA,GAAEM,MAAM,CAACO,IAAI,EAAEN,KAAK,EAAEpB,kBAAkB;YAAA;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GAVDE,MAAM,CAACQ,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWX,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CAlDQD,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAoDnB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}