{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmiln\\\\my-app\\\\src\\\\components\\\\CurrentlyPlaying.js\",\n  _s = $RefreshSig$();\n// CurrentlyPlaying.js\n\nimport React, { useState, useEffect } from 'react';\nimport spotifyApi from '../spotifyAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CurrentlyPlaying() {\n  _s();\n  const [currentTrack, setCurrentTrack] = useState(null);\n  useEffect(() => {\n    // Fetch the user's currently playing track\n    spotifyApi.getMyCurrentPlayingTrack().then(response => {\n      setCurrentTrack(response.item);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Currently Playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), currentTrack && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentTrack.album.images[0].url,\n        alt: currentTrack.name,\n        className: \"album-art-currently\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"track-name\",\n          children: currentTrack.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"artists\",\n          children: currentTrack.artists.map(artist => artist.name).join(', ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), !currentTrack && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No track currently playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(CurrentlyPlaying, \"HHi/6zj8nxa3WTxfIvOeEMmOqbc=\");\n_c = CurrentlyPlaying;\nexport default CurrentlyPlaying;\nvar _c;\n$RefreshReg$(_c, \"CurrentlyPlaying\");","map":{"version":3,"names":["React","useState","useEffect","spotifyApi","jsxDEV","_jsxDEV","CurrentlyPlaying","_s","currentTrack","setCurrentTrack","getMyCurrentPlayingTrack","then","response","item","children","fileName","_jsxFileName","lineNumber","columnNumber","src","album","images","url","alt","name","className","artists","map","artist","join","_c","$RefreshReg$"],"sources":["C:/Users/nmiln/my-app/src/components/CurrentlyPlaying.js"],"sourcesContent":["// CurrentlyPlaying.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport spotifyApi from '../spotifyAuth';\r\n\r\nfunction CurrentlyPlaying() {\r\n  const [currentTrack, setCurrentTrack] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch the user's currently playing track\r\n    spotifyApi.getMyCurrentPlayingTrack().then((response) => {\r\n      setCurrentTrack(response.item);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Currently Playing</h2>\r\n      {currentTrack && (\r\n        <div>\r\n          <img\r\n            src={currentTrack.album.images[0].url}\r\n            alt={currentTrack.name}\r\n            className=\"album-art-currently\"\r\n          />\r\n          <div className=\"track-info\">\r\n            <p className=\"track-name\">{currentTrack.name}</p>\r\n            <p className=\"artists\">{currentTrack.artists.map((artist) => artist.name).join(', ')}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!currentTrack && <p>No track currently playing</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CurrentlyPlaying;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd;IACAC,UAAU,CAACO,wBAAwB,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACvDH,eAAe,CAACG,QAAQ,CAACC,IAAI,CAAC;IAChC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBV,YAAY,iBACXH,OAAA;MAAAS,QAAA,gBACET,OAAA;QACEc,GAAG,EAAEX,YAAY,CAACY,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,GAAI;QACtCC,GAAG,EAAEf,YAAY,CAACgB,IAAK;QACvBC,SAAS,EAAC;MAAqB;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFb,OAAA;QAAKoB,SAAS,EAAC,YAAY;QAAAX,QAAA,gBACzBT,OAAA;UAAGoB,SAAS,EAAC,YAAY;UAAAX,QAAA,EAAEN,YAAY,CAACgB;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjDb,OAAA;UAAGoB,SAAS,EAAC,SAAS;UAAAX,QAAA,EAAEN,YAAY,CAACkB,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAKA,MAAM,CAACJ,IAAI,CAAC,CAACK,IAAI,CAAC,IAAI;QAAC;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EACA,CAACV,YAAY,iBAAIH,OAAA;MAAAS,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAACX,EAAA,CA7BQD,gBAAgB;AAAAwB,EAAA,GAAhBxB,gBAAgB;AA+BzB,eAAeA,gBAAgB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}