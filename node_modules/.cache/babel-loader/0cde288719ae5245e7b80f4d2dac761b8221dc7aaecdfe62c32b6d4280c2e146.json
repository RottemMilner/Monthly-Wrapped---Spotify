{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmiln\\\\OneDrive\\\\Desktop\\\\my-app\\\\src\\\\components\\\\TopArtists.js\",\n  _s = $RefreshSig$();\n// components/TopArtists.js\n\nimport React, { useState, useEffect } from 'react';\nimport spotifyApi from '../spotifyAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TopArtists() {\n  _s();\n  const [topArtists, setTopArtists] = useState([]);\n  const [showHeadline, setShowHeadline] = useState(false);\n  const [currentSlide, setCurrentSlide] = useState(0); // Added state for the current slide\n\n  useEffect(() => {\n    // Fetch the user's top artists\n    spotifyApi.getMyTopArtists({\n      limit: 20,\n      time_range: 'short_term'\n    }).then(response => {\n      setTopArtists(response.items);\n      setShowHeadline(true);\n      startSlideshow(); // Start the slideshow when data is fetched\n    });\n  }, []);\n  const startSlideshow = () => {\n    // Automatically move to the next slide every 3 seconds (adjust as needed)\n    const intervalId = setInterval(() => {\n      setCurrentSlide(prevSlide => (prevSlide + 1) % topArtists.length);\n    }, 3000);\n\n    // Clean up the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showHeadline && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top Artists This Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"top-artists-list\",\n      children: topArtists.map((artist, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `top-artists-item ${index === currentSlide ? 'active-slide' : ''}`,\n        children: [artist.images.length > 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: artist.images[0].url,\n          alt: artist.name,\n          className: \"artist-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"artist-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"artist-name\",\n            children: [artist.name, index]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, artist.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(TopArtists, \"MyLVKA2+Qg2aUMIh0MUPFRPWOHU=\");\n_c = TopArtists;\nexport default TopArtists;\nvar _c;\n$RefreshReg$(_c, \"TopArtists\");","map":{"version":3,"names":["React","useState","useEffect","spotifyApi","jsxDEV","_jsxDEV","TopArtists","_s","topArtists","setTopArtists","showHeadline","setShowHeadline","currentSlide","setCurrentSlide","getMyTopArtists","limit","time_range","then","response","items","startSlideshow","intervalId","setInterval","prevSlide","length","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","artist","index","images","src","url","alt","name","id","_c","$RefreshReg$"],"sources":["C:/Users/nmiln/OneDrive/Desktop/my-app/src/components/TopArtists.js"],"sourcesContent":["// components/TopArtists.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport spotifyApi from '../spotifyAuth';\r\n\r\nfunction TopArtists() {\r\n  const [topArtists, setTopArtists] = useState([]);\r\n  const [showHeadline, setShowHeadline] = useState(false);\r\n  const [currentSlide, setCurrentSlide] = useState(0); // Added state for the current slide\r\n\r\n  useEffect(() => {\r\n    // Fetch the user's top artists\r\n    spotifyApi.getMyTopArtists({ limit: 20, time_range: 'short_term' }).then((response) => {\r\n      setTopArtists(response.items);\r\n      setShowHeadline(true);\r\n      startSlideshow(); // Start the slideshow when data is fetched\r\n    });\r\n  }, []);\r\n\r\n  const startSlideshow = () => {\r\n    // Automatically move to the next slide every 3 seconds (adjust as needed)\r\n    const intervalId = setInterval(() => {\r\n      setCurrentSlide((prevSlide) => (prevSlide + 1) % topArtists.length);\r\n    }, 3000);\r\n\r\n    // Clean up the interval when the component unmounts\r\n    return () => clearInterval(intervalId);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showHeadline && <h2>Top Artists This Month</h2>}\r\n      <ul className=\"top-artists-list\">\r\n        {topArtists.map((artist, index) => (\r\n          <li\r\n            key={artist.id}\r\n            className={`top-artists-item ${index === currentSlide ? 'active-slide' : ''}`}\r\n          >\r\n            {artist.images.length > 0 && (\r\n              <img src={artist.images[0].url} alt={artist.name} className=\"artist-image\" />\r\n            )}\r\n            <div className=\"artist-info\">\r\n              <p className=\"artist-name\">{artist.name}{index}</p>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopArtists;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAErDC,SAAS,CAAC,MAAM;IACd;IACAC,UAAU,CAACW,eAAe,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAa,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACrFT,aAAa,CAACS,QAAQ,CAACC,KAAK,CAAC;MAC7BR,eAAe,CAAC,IAAI,CAAC;MACrBS,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACA,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCT,eAAe,CAAEU,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIf,UAAU,CAACgB,MAAM,CAAC;IACrE,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMC,aAAa,CAACJ,UAAU,CAAC;EACxC,CAAC;EAED,oBACEhB,OAAA;IAAAqB,QAAA,GACGhB,YAAY,iBAAIL,OAAA;MAAAqB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDzB,OAAA;MAAI0B,SAAS,EAAC,kBAAkB;MAAAL,QAAA,EAC7BlB,UAAU,CAACwB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC5B7B,OAAA;QAEE0B,SAAS,EAAG,oBAAmBG,KAAK,KAAKtB,YAAY,GAAG,cAAc,GAAG,EAAG,EAAE;QAAAc,QAAA,GAE7EO,MAAM,CAACE,MAAM,CAACX,MAAM,GAAG,CAAC,iBACvBnB,OAAA;UAAK+B,GAAG,EAAEH,MAAM,CAACE,MAAM,CAAC,CAAC,CAAC,CAACE,GAAI;UAACC,GAAG,EAAEL,MAAM,CAACM,IAAK;UAACR,SAAS,EAAC;QAAc;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAC7E,eACDzB,OAAA;UAAK0B,SAAS,EAAC,aAAa;UAAAL,QAAA,eAC1BrB,OAAA;YAAG0B,SAAS,EAAC,aAAa;YAAAL,QAAA,GAAEO,MAAM,CAACM,IAAI,EAAEL,KAAK;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC;MAAA,GARDG,MAAM,CAACO,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACvB,EAAA,CA5CQD,UAAU;AAAAmC,EAAA,GAAVnC,UAAU;AA8CnB,eAAeA,UAAU;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}