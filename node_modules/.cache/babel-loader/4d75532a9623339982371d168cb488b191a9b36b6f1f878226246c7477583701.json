{"ast":null,"code":"// spotifyAuth.js\n\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\nconst redirectUri = 'http://localhost:3000/callback'; // Your redirect URI\n\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\nconst clientId = '93eccb80fce44629b1d618ed9cf26ba3'; // Replace with your client ID\n\nconst scopes = ['user-read-private', 'user-read-email', 'user-read-recently-played', 'user-top-read', 'user-read-currently-playing', 'playlist-modify-public', 'playlist-modify-private', 'app-remote-control', 'streaming']; // Add more scopes as needed\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join('%20')}&response_type=token&show_dialog=true`;\nexport const getTokenFromUrl = () => {\n  return window.location.hash.substring(1).split('&').reduce((initial, item) => {\n    let parts = item.split('=');\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n    return initial;\n  }, {});\n};\nexport const setAccessToken = token => {\n  if (token) {\n    spotifyApi.setAccessToken(token);\n    localStorage.setItem('spotifyAccessToken', token);\n  }\n};\nexport const getAccessTokenFromStorage = () => {\n  return localStorage.getItem('spotifyAccessToken');\n};\nexport const initializeAccessToken = () => {\n  const storedToken = getAccessTokenFromStorage();\n  if (storedToken) {\n    spotifyApi.setAccessToken(storedToken);\n  }\n};\nexport default spotifyApi;","map":{"version":3,"names":["SpotifyWebApi","spotifyApi","redirectUri","authEndpoint","clientId","scopes","loginUrl","join","getTokenFromUrl","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","setAccessToken","token","localStorage","setItem","getAccessTokenFromStorage","getItem","initializeAccessToken","storedToken"],"sources":["C:/Users/nmiln/OneDrive/Desktop/Spotify Monthly Wrapped/src/spotifyAuth.js"],"sourcesContent":["// spotifyAuth.js\r\n\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\n\r\nconst spotifyApi = new SpotifyWebApi();\r\nconst redirectUri = 'http://localhost:3000/callback'; // Your redirect URI\r\n\r\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\r\nconst clientId = '93eccb80fce44629b1d618ed9cf26ba3'; // Replace with your client ID\r\n\r\nconst scopes = ['user-read-private', 'user-read-email','user-read-recently-played', 'user-top-read', 'user-read-currently-playing', 'playlist-modify-public' , 'playlist-modify-private', 'app-remote-control', 'streaming']; // Add more scopes as needed\r\n\r\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n  '%20'\r\n)}&response_type=token&show_dialog=true`;\r\n\r\nexport const getTokenFromUrl = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split('&')\r\n    .reduce((initial, item) => {\r\n      let parts = item.split('=');\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n\r\n      return initial;\r\n    }, {});\r\n};\r\n\r\nexport const setAccessToken = (token) => {\r\n  if (token) {\r\n    spotifyApi.setAccessToken(token);\r\n    localStorage.setItem('spotifyAccessToken', token); \r\n  }\r\n};\r\n\r\nexport const getAccessTokenFromStorage = () => {\r\n  return localStorage.getItem('spotifyAccessToken');\r\n};\r\n\r\nexport const initializeAccessToken = () => {\r\n  const storedToken = getAccessTokenFromStorage();\r\n  if (storedToken) {\r\n    spotifyApi.setAccessToken(storedToken);\r\n  }\r\n};\r\n\r\nexport default spotifyApi;\r\n"],"mappings":"AAAA;;AAEA,OAAOA,aAAa,MAAM,oBAAoB;AAE9C,MAAMC,UAAU,GAAG,IAAID,aAAa,CAAC,CAAC;AACtC,MAAME,WAAW,GAAG,gCAAgC,CAAC,CAAC;;AAEtD,OAAO,MAAMC,YAAY,GAAG,wCAAwC;AACpE,MAAMC,QAAQ,GAAG,kCAAkC,CAAC,CAAC;;AAErD,MAAMC,MAAM,GAAG,CAAC,mBAAmB,EAAE,iBAAiB,EAAC,2BAA2B,EAAE,eAAe,EAAE,6BAA6B,EAAE,wBAAwB,EAAG,yBAAyB,EAAE,oBAAoB,EAAE,WAAW,CAAC,CAAC,CAAC;;AAE9N,OAAO,MAAMC,QAAQ,GAAI,GAAEH,YAAa,cAAaC,QAAS,iBAAgBF,WAAY,UAASG,MAAM,CAACE,IAAI,CAC5G,KACF,CAAE,uCAAsC;AAExC,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAOC,MAAM,CAACC,QAAQ,CAACC,IAAI,CACxBC,SAAS,CAAC,CAAC,CAAC,CACZC,KAAK,CAAC,GAAG,CAAC,CACVC,MAAM,CAAC,CAACC,OAAO,EAAEC,IAAI,KAAK;IACzB,IAAIC,KAAK,GAAGD,IAAI,CAACH,KAAK,CAAC,GAAG,CAAC;IAC3BE,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGC,kBAAkB,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC;IAEhD,OAAOF,OAAO;EAChB,CAAC,EAAE,CAAC,CAAC,CAAC;AACV,CAAC;AAED,OAAO,MAAMI,cAAc,GAAIC,KAAK,IAAK;EACvC,IAAIA,KAAK,EAAE;IACTnB,UAAU,CAACkB,cAAc,CAACC,KAAK,CAAC;IAChCC,YAAY,CAACC,OAAO,CAAC,oBAAoB,EAAEF,KAAK,CAAC;EACnD;AACF,CAAC;AAED,OAAO,MAAMG,yBAAyB,GAAGA,CAAA,KAAM;EAC7C,OAAOF,YAAY,CAACG,OAAO,CAAC,oBAAoB,CAAC;AACnD,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EACzC,MAAMC,WAAW,GAAGH,yBAAyB,CAAC,CAAC;EAC/C,IAAIG,WAAW,EAAE;IACfzB,UAAU,CAACkB,cAAc,CAACO,WAAW,CAAC;EACxC;AACF,CAAC;AAED,eAAezB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}