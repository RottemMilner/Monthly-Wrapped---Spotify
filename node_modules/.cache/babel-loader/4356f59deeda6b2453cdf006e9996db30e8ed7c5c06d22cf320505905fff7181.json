{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmiln\\\\OneDrive\\\\Desktop\\\\my-app\\\\src\\\\components\\\\SpotifyPlayer.js\",\n  _s = $RefreshSig$();\n// SpotifyPlayer.js\n\nimport React, { useEffect, useState } from 'react';\nimport spotifyApi from '../spotifyAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SpotifyPlayer() {\n  _s();\n  const [player, setPlayer] = useState(null);\n  const [track, setTrack] = useState(null);\n  useEffect(() => {\n    // Initialize Spotify Web Playback SDK\n    const script = document.createElement('script');\n    script.src = 'https://sdk.scdn.co/spotify-player.js';\n    script.async = true;\n    document.body.appendChild(script);\n    script.onload = () => {\n      window.onSpotifyWebPlaybackSDKReady = () => {\n        const newPlayer = new window.Spotify.Player({\n          name: 'Your App Name',\n          getOAuthToken: cb => {\n            // Fetch access token\n            spotifyApi.getAccessToken().then(token => {\n              cb(token);\n            });\n          }\n        });\n\n        // Error handling\n        newPlayer.addListener('initialization_error', ({\n          message\n        }) => {\n          console.error(`Failed to initialize player: ${message}`);\n        });\n        newPlayer.addListener('authentication_error', ({\n          message\n        }) => {\n          console.error(`Failed to authenticate player: ${message}`);\n        });\n        newPlayer.addListener('account_error', ({\n          message\n        }) => {\n          console.error(`Failed to validate Spotify account: ${message}`);\n        });\n        newPlayer.addListener('playback_error', ({\n          message\n        }) => {\n          console.error(`Failed to perform playback: ${message}`);\n        });\n\n        // Playback status updates\n        newPlayer.addListener('player_state_changed', state => {\n          console.log('Player state changed:', state);\n          setTrack(state.track_window.current_track);\n        });\n\n        // Ready\n        newPlayer.addListener('ready', ({\n          device_id\n        }) => {\n          console.log('Player ready with device ID', device_id);\n        });\n\n        // Connect to the player\n        newPlayer.connect().then(success => {\n          if (success) {\n            console.log('Connected to the player');\n          }\n        });\n        setPlayer(newPlayer);\n      };\n    };\n    return () => {\n      // Clean up on component unmount\n      if (player) {\n        player.disconnect();\n        setPlayer(null);\n      }\n    };\n  }, [player]);\n  const playTrack = () => {\n    if (player) {\n      player.resume();\n    }\n  };\n  const pauseTrack = () => {\n    if (player) {\n      player.pause();\n    }\n  };\n  const nextTrack = () => {\n    if (player) {\n      player.nextTrack();\n    }\n  };\n  const previousTrack = () => {\n    if (player) {\n      player.previousTrack();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Spotify Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), track && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Currently Playing: \", track.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"By: \", track.artists.map(artist => artist.name).join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: playTrack,\n      children: \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: pauseTrack,\n      children: \"Pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextTrack,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: previousTrack,\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(SpotifyPlayer, \"+Tk9xGtu+PWRMQnU4z+Li3FTuG8=\");\n_c = SpotifyPlayer;\nexport default SpotifyPlayer;\nvar _c;\n$RefreshReg$(_c, \"SpotifyPlayer\");","map":{"version":3,"names":["React","useEffect","useState","spotifyApi","jsxDEV","_jsxDEV","SpotifyPlayer","_s","player","setPlayer","track","setTrack","script","document","createElement","src","async","body","appendChild","onload","window","onSpotifyWebPlaybackSDKReady","newPlayer","Spotify","Player","name","getOAuthToken","cb","getAccessToken","then","token","addListener","message","console","error","state","log","track_window","current_track","device_id","connect","success","disconnect","playTrack","resume","pauseTrack","pause","nextTrack","previousTrack","children","fileName","_jsxFileName","lineNumber","columnNumber","artists","map","artist","join","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nmiln/OneDrive/Desktop/my-app/src/components/SpotifyPlayer.js"],"sourcesContent":["// SpotifyPlayer.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport spotifyApi from '../spotifyAuth';\r\n\r\nfunction SpotifyPlayer() {\r\n  const [player, setPlayer] = useState(null);\r\n  const [track, setTrack] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize Spotify Web Playback SDK\r\n    const script = document.createElement('script');\r\n    script.src = 'https://sdk.scdn.co/spotify-player.js';\r\n    script.async = true;\r\n    document.body.appendChild(script);\r\n\r\n    script.onload = () => {\r\n      window.onSpotifyWebPlaybackSDKReady = () => {\r\n        const newPlayer = new window.Spotify.Player({\r\n          name: 'Your App Name',\r\n          getOAuthToken: (cb) => {\r\n            // Fetch access token\r\n            spotifyApi.getAccessToken().then((token) => {\r\n              cb(token);\r\n            });\r\n          },\r\n        });\r\n\r\n        // Error handling\r\n        newPlayer.addListener('initialization_error', ({ message }) => {\r\n          console.error(`Failed to initialize player: ${message}`);\r\n        });\r\n\r\n        newPlayer.addListener('authentication_error', ({ message }) => {\r\n          console.error(`Failed to authenticate player: ${message}`);\r\n        });\r\n\r\n        newPlayer.addListener('account_error', ({ message }) => {\r\n          console.error(`Failed to validate Spotify account: ${message}`);\r\n        });\r\n\r\n        newPlayer.addListener('playback_error', ({ message }) => {\r\n          console.error(`Failed to perform playback: ${message}`);\r\n        });\r\n\r\n        // Playback status updates\r\n        newPlayer.addListener('player_state_changed', (state) => {\r\n          console.log('Player state changed:', state);\r\n          setTrack(state.track_window.current_track);\r\n        });\r\n\r\n        // Ready\r\n        newPlayer.addListener('ready', ({ device_id }) => {\r\n          console.log('Player ready with device ID', device_id);\r\n        });\r\n\r\n        // Connect to the player\r\n        newPlayer.connect().then((success) => {\r\n          if (success) {\r\n            console.log('Connected to the player');\r\n          }\r\n        });\r\n\r\n        setPlayer(newPlayer);\r\n      };\r\n    };\r\n\r\n    return () => {\r\n      // Clean up on component unmount\r\n      if (player) {\r\n        player.disconnect();\r\n        setPlayer(null);\r\n      }\r\n    };\r\n  }, [player]);\r\n\r\n  const playTrack = () => {\r\n    if (player) {\r\n      player.resume();\r\n    }\r\n  };\r\n\r\n  const pauseTrack = () => {\r\n    if (player) {\r\n      player.pause();\r\n    }\r\n  };\r\n\r\n  const nextTrack = () => {\r\n    if (player) {\r\n      player.nextTrack();\r\n    }\r\n  };\r\n\r\n  const previousTrack = () => {\r\n    if (player) {\r\n      player.previousTrack();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Spotify Player</h2>\r\n      {track && (\r\n        <div>\r\n          <p>Currently Playing: {track.name}</p>\r\n          <p>By: {track.artists.map((artist) => artist.name).join(', ')}</p>\r\n        </div>\r\n      )}\r\n      <button onClick={playTrack}>Play</button>\r\n      <button onClick={pauseTrack}>Pause</button>\r\n      <button onClick={nextTrack}>Next</button>\r\n      <button onClick={previousTrack}>Previous</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpotifyPlayer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}