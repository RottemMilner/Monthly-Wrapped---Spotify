{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmiln\\\\OneDrive\\\\Desktop\\\\Spotify Monthly Wrapped\\\\src\\\\components\\\\Slideshow.js\",\n  _s = $RefreshSig$();\n// Slideshow.js\nimport React, { useState, useEffect } from 'react';\nimport TopTracks from './TopTracks';\nimport TopArtists from './TopArtists';\nimport TopGenresButton from './TopGenresButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slideshow = ({\n  user\n}) => {\n  _s();\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const slides = [/*#__PURE__*/_jsxDEV(TopTracks, {\n    user: user\n  }, 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(TopArtists, {}, 1, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(TopGenresButton, {}, 2, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)];\n  const nextSlide = () => {\n    setCurrentSlide(prevSlide => (prevSlide + 1) % slides.length);\n  };\n  const startAutoChange = () => {\n    const intervalId = setInterval(nextSlide, 5000);\n    return () => clearInterval(intervalId);\n  };\n  useEffect(() => {\n    const clearAutoChange = startAutoChange();\n    return () => clearAutoChange();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slideshow-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slide\",\n      style: {\n        transform: `translateX(-${currentSlide * 100}%)`\n      },\n      children: slides.map((slide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide-content\",\n        children: slide\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Slideshow, \"/jm+XmndjAYlDCFyCnfFEXJOloU=\");\n_c = Slideshow;\nexport default Slideshow;\nvar _c;\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"names":["React","useState","useEffect","TopTracks","TopArtists","TopGenresButton","jsxDEV","_jsxDEV","Slideshow","user","_s","currentSlide","setCurrentSlide","slides","fileName","_jsxFileName","lineNumber","columnNumber","nextSlide","prevSlide","length","startAutoChange","intervalId","setInterval","clearInterval","clearAutoChange","className","children","style","transform","map","slide","index","_c","$RefreshReg$"],"sources":["C:/Users/nmiln/OneDrive/Desktop/Spotify Monthly Wrapped/src/components/Slideshow.js"],"sourcesContent":["// Slideshow.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport TopTracks from './TopTracks';\r\nimport TopArtists from './TopArtists';\r\nimport TopGenresButton from './TopGenresButton';\r\n\r\nconst Slideshow = ({ user }) => {\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n\r\n  const slides = [\r\n    <TopTracks key={0} user={user} />,\r\n    <TopArtists key={1} />,\r\n    <TopGenresButton key={2} />,\r\n  ];\r\n\r\n  const nextSlide = () => {\r\n    setCurrentSlide((prevSlide) => (prevSlide + 1) % slides.length);\r\n  };\r\n\r\n  const startAutoChange = () => {\r\n    const intervalId = setInterval(nextSlide, 5000);\r\n    return () => clearInterval(intervalId);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const clearAutoChange = startAutoChange();\r\n    return () => clearAutoChange();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"slideshow-container\">\r\n      <div className=\"slide\" style={{ transform: `translateX(-${currentSlide * 100}%)` }}>\r\n        {slides.map((slide, index) => (\r\n          <div key={index} className=\"slide-content\">\r\n            {slide}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slideshow;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAMY,MAAM,GAAG,cACbN,OAAA,CAACJ,SAAS;IAASM,IAAI,EAAEA;EAAK,GAAd,CAAC;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAe,CAAC,eACjCV,OAAA,CAACH,UAAU,MAAM,CAAC;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC,eACtBV,OAAA,CAACF,eAAe,MAAM,CAAC;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC,CAC5B;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBN,eAAe,CAAEO,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIN,MAAM,CAACO,MAAM,CAAC;EACjE,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,UAAU,GAAGC,WAAW,CAACL,SAAS,EAAE,IAAI,CAAC;IAC/C,OAAO,MAAMM,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACd,MAAMuB,eAAe,GAAGJ,eAAe,CAAC,CAAC;IACzC,OAAO,MAAMI,eAAe,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAKmB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAClCpB,OAAA;MAAKmB,SAAS,EAAC,OAAO;MAACE,KAAK,EAAE;QAAEC,SAAS,EAAG,eAAclB,YAAY,GAAG,GAAI;MAAI,CAAE;MAAAgB,QAAA,EAChFd,MAAM,CAACiB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBzB,OAAA;QAAiBmB,SAAS,EAAC,eAAe;QAAAC,QAAA,EACvCI;MAAK,GADEC,KAAK;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACP,EAAA,CAlCIF,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}