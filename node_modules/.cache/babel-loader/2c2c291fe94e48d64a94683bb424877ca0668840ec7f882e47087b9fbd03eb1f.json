{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmiln\\\\my-app\\\\src\\\\components\\\\TopArtists.js\",\n  _s = $RefreshSig$();\n// components/TopArtists/TopArtists.js\n\nimport React, { useState, useEffect } from 'react';\nimport spotifyApi from '../spotifyAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TopArtists() {\n  _s();\n  const [topArtists, setTopArtists] = useState([]);\n  const [showHeadline, setShowHeadline] = useState(false);\n  useEffect(() => {\n    // Fetch the user's top artists\n    spotifyApi.getMyTopArtists({\n      limit: 20,\n      time_range: 'short_term'\n    }).then(response => {\n      setTopArtists(response.items);\n      setShowHeadline(true); // Set to true after fetching data\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showHeadline && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top Artists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"top-artists-list\",\n      children: topArtists.map(artist => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"top-artists-item\",\n        children: [artist.images.length > 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: artist.images[2].url // Assuming you want to display the artist image\n          ,\n          alt: artist.name,\n          className: \"artist-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"artist-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"artist-name\",\n            children: artist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, artist.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(TopArtists, \"TvXvbQoYbieP5KEQ0SQlgWwH9BI=\");\n_c = TopArtists;\nexport default TopArtists;\nvar _c;\n$RefreshReg$(_c, \"TopArtists\");","map":{"version":3,"names":["React","useState","useEffect","spotifyApi","jsxDEV","_jsxDEV","TopArtists","_s","topArtists","setTopArtists","showHeadline","setShowHeadline","getMyTopArtists","limit","time_range","then","response","items","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","artist","images","length","src","url","alt","name","id","_c","$RefreshReg$"],"sources":["C:/Users/nmiln/my-app/src/components/TopArtists.js"],"sourcesContent":["// components/TopArtists/TopArtists.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport spotifyApi from '../spotifyAuth';\r\n\r\nfunction TopArtists() {\r\n  const [topArtists, setTopArtists] = useState([]);\r\n  const [showHeadline, setShowHeadline] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch the user's top artists\r\n    spotifyApi.getMyTopArtists({ limit: 20, time_range: 'short_term' }).then((response) => {\r\n      setTopArtists(response.items);\r\n      setShowHeadline(true); // Set to true after fetching data\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {showHeadline && <h2>Top Artists</h2>}\r\n      <ul className=\"top-artists-list\">\r\n        {topArtists.map((artist) => (\r\n          <li key={artist.id} className=\"top-artists-item\">\r\n            {artist.images.length > 0 && (\r\n              <img\r\n                src={artist.images[2].url} // Assuming you want to display the artist image\r\n                alt={artist.name}\r\n                className=\"artist-image\"\r\n              />\r\n            )}\r\n            <div className=\"artist-info\">\r\n              <p className=\"artist-name\">{artist.name}</p>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopArtists;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd;IACAC,UAAU,CAACS,eAAe,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAa,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACrFP,aAAa,CAACO,QAAQ,CAACC,KAAK,CAAC;MAC7BN,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAAa,QAAA,GACGR,YAAY,iBAAIL,OAAA;MAAAa,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCjB,OAAA;MAAIkB,SAAS,EAAC,kBAAkB;MAAAL,QAAA,EAC7BV,UAAU,CAACgB,GAAG,CAAEC,MAAM,iBACrBpB,OAAA;QAAoBkB,SAAS,EAAC,kBAAkB;QAAAL,QAAA,GAC7CO,MAAM,CAACC,MAAM,CAACC,MAAM,GAAG,CAAC,iBACvBtB,OAAA;UACEuB,GAAG,EAAEH,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAACG,GAAI,CAAC;UAAA;UAC3BC,GAAG,EAAEL,MAAM,CAACM,IAAK;UACjBR,SAAS,EAAC;QAAc;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CACF,eACDjB,OAAA;UAAKkB,SAAS,EAAC,aAAa;UAAAL,QAAA,eAC1Bb,OAAA;YAAGkB,SAAS,EAAC,aAAa;YAAAL,QAAA,EAAEO,MAAM,CAACM;UAAI;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA,GAVCG,MAAM,CAACO,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACf,EAAA,CAjCQD,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAmCnB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}