{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmiln\\\\my-app\\\\src\\\\components\\\\RecentlyPlayed.js\",\n  _s = $RefreshSig$();\n// components/RecentlyPlayed/RecentlyPlayed.js\n\nimport React, { useState, useEffect } from 'react';\nimport spotifyApi from '../spotifyAuth';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecentlyPlayed({\n  setFavorites\n}) {\n  _s();\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const [showHeadline, setShowHeadline] = useState(false);\n  const [favorites, setFavoritesState] = useState([]);\n  useEffect(() => {\n    // Fetch the user's recently played tracks\n    spotifyApi.getMyRecentlyPlayedTracks({\n      limit: 50\n    }).then(response => {\n      setRecentlyPlayed(response.items);\n      setShowHeadline(true); // Set to true after fetching data\n    });\n  }, []);\n  const isTrackInFavorites = track => {\n    return favorites.some(fav => fav.id === track.track.id);\n  };\n  const handleAddToFavorites = track => {\n    setFavoritesState(prevFavorites => [...prevFavorites, track.track]);\n    setFavorites(prevFavorites => [...prevFavorites, track.track]);\n  };\n  const handleRemoveFromFavorites = track => {\n    setFavoritesState(prevFavorites => prevFavorites.filter(fav => fav.id !== track.track.id));\n    setFavorites(prevFavorites => prevFavorites.filter(fav => fav.id !== track.track.id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showHeadline && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recently Played\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"recently-played-list\",\n      children: recentlyPlayed.map(track => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"recently-played-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: track.track.album.images[2].url // Assuming you want to display the album art\n          ,\n          alt: track.track.name,\n          className: \"album-art\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"track-name\",\n            children: track.track.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"artists\",\n            children: track.track.artists.map(artist => artist.name).join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), isTrackInFavorites(track) ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveFromFavorites(track),\n            className: \"remove-from-favorites-button\",\n            children: \"Remove from Favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddToFavorites(track),\n            className: \"add-to-favorites-button\",\n            children: \"Add to Favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, track.track.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(RecentlyPlayed, \"uCAFxR5P+clnvHj3ygg2cN6mzHQ=\");\n_c = RecentlyPlayed;\nRecentlyPlayed.propTypes = {\n  setFavorites: PropTypes.func.isRequired\n};\nexport default RecentlyPlayed;\nvar _c;\n$RefreshReg$(_c, \"RecentlyPlayed\");","map":{"version":3,"names":["React","useState","useEffect","spotifyApi","PropTypes","jsxDEV","_jsxDEV","RecentlyPlayed","setFavorites","_s","recentlyPlayed","setRecentlyPlayed","showHeadline","setShowHeadline","favorites","setFavoritesState","getMyRecentlyPlayedTracks","limit","then","response","items","isTrackInFavorites","track","some","fav","id","handleAddToFavorites","prevFavorites","handleRemoveFromFavorites","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","src","album","images","url","alt","name","artists","artist","join","onClick","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["C:/Users/nmiln/my-app/src/components/RecentlyPlayed.js"],"sourcesContent":["// components/RecentlyPlayed/RecentlyPlayed.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport spotifyApi from '../spotifyAuth';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction RecentlyPlayed({ setFavorites }) {\r\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\r\n  const [showHeadline, setShowHeadline] = useState(false);\r\n  const [favorites, setFavoritesState] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch the user's recently played tracks\r\n    spotifyApi.getMyRecentlyPlayedTracks({ limit: 50 }).then((response) => {\r\n      setRecentlyPlayed(response.items);\r\n      setShowHeadline(true); // Set to true after fetching data\r\n    });\r\n  }, []);\r\n\r\n  const isTrackInFavorites = (track) => {\r\n    return favorites.some((fav) => fav.id === track.track.id);\r\n  };\r\n\r\n  const handleAddToFavorites = (track) => {\r\n    setFavoritesState((prevFavorites) => [...prevFavorites, track.track]);\r\n    setFavorites((prevFavorites) => [...prevFavorites, track.track]);\r\n  };\r\n\r\n  const handleRemoveFromFavorites = (track) => {\r\n    setFavoritesState((prevFavorites) =>\r\n      prevFavorites.filter((fav) => fav.id !== track.track.id)\r\n    );\r\n    setFavorites((prevFavorites) =>\r\n      prevFavorites.filter((fav) => fav.id !== track.track.id)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showHeadline && <h2>Recently Played</h2>}\r\n      <ul className=\"recently-played-list\">\r\n        {recentlyPlayed.map((track) => (\r\n          <li key={track.track.id} className=\"recently-played-item\">\r\n            <img\r\n              src={track.track.album.images[2].url} // Assuming you want to display the album art\r\n              alt={track.track.name}\r\n              className=\"album-art\"\r\n            />\r\n            <div className=\"track-info\">\r\n              <p className=\"track-name\">{track.track.name}</p>\r\n              <p className=\"artists\">\r\n                {track.track.artists.map((artist) => artist.name).join(', ')}\r\n              </p>\r\n              {isTrackInFavorites(track) ? (\r\n                <button\r\n                  onClick={() => handleRemoveFromFavorites(track)}\r\n                  className=\"remove-from-favorites-button\"\r\n                >\r\n                  Remove from Favorites\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={() => handleAddToFavorites(track)}\r\n                  className=\"add-to-favorites-button\"\r\n                >\r\n                  Add to Favorites\r\n                </button>\r\n              )}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nRecentlyPlayed.propTypes = {\r\n  setFavorites: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default RecentlyPlayed;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}