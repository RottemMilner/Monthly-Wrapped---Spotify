{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmiln\\\\my-app\\\\src\\\\components\\\\CurrentlyPlaying.js\",\n  _s = $RefreshSig$();\n// CurrentlyPlaying.js\n\nimport React, { useState, useEffect } from 'react';\nimport spotifyApi from '../spotifyAuth';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CurrentlyPlaying({\n  setFavorites\n}) {\n  _s();\n  const [currentTrack, setCurrentTrack] = useState(null);\n  useEffect(() => {\n    // Fetch the user's currently playing track\n    spotifyApi.getMyCurrentPlayingTrack().then(response => {\n      setCurrentTrack(response.item);\n    });\n  }, []);\n  const isTrackInFavorites = track => {\n    return track && track.id && favorites && Array.isArray(favorites) && favorites.some(fav => fav && fav.id === track.id);\n  };\n  const handleAddToFavorites = track => {\n    setFavorites(prevFavorites => {\n      const newFavorites = Array.isArray(prevFavorites) ? [...prevFavorites] : [];\n      newFavorites.push(track);\n      localStorage.setItem('favorites', JSON.stringify(newFavorites)); // Save to localStorage\n      return newFavorites;\n    });\n  };\n  const handleRemoveFromFavorites = track => {\n    if (track && track.id) {\n      setFavorites(prevFavorites => {\n        const newFavorites = Array.isArray(prevFavorites) ? prevFavorites.filter(fav => fav && fav.id !== track.id) : [];\n        localStorage.setItem('favorites', JSON.stringify(newFavorites)); // Save to localStorage\n        return newFavorites;\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Currently Playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), currentTrack && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentTrack.album.images[0].url,\n        alt: currentTrack.name,\n        className: \"album-art-currently\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"track-name\",\n          children: currentTrack.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"artists\",\n          children: currentTrack.artists.map(artist => artist.name).join(', ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), isTrackInFavorites(currentTrack) ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveFromFavorites(currentTrack),\n          className: \"remove-from-favorites-button\",\n          children: \"Remove from Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddToFavorites(currentTrack),\n          className: \"add-to-favorites-button\",\n          children: \"Add to Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), !currentTrack && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No track currently playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(CurrentlyPlaying, \"HHi/6zj8nxa3WTxfIvOeEMmOqbc=\");\n_c = CurrentlyPlaying;\nCurrentlyPlaying.propTypes = {\n  setFavorites: PropTypes.func.isRequired\n};\nexport default CurrentlyPlaying;\nvar _c;\n$RefreshReg$(_c, \"CurrentlyPlaying\");","map":{"version":3,"names":["React","useState","useEffect","spotifyApi","PropTypes","jsxDEV","_jsxDEV","CurrentlyPlaying","setFavorites","_s","currentTrack","setCurrentTrack","getMyCurrentPlayingTrack","then","response","item","isTrackInFavorites","track","id","favorites","Array","isArray","some","fav","handleAddToFavorites","prevFavorites","newFavorites","push","localStorage","setItem","JSON","stringify","handleRemoveFromFavorites","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","src","album","images","url","alt","name","className","artists","map","artist","join","onClick","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["C:/Users/nmiln/my-app/src/components/CurrentlyPlaying.js"],"sourcesContent":["// CurrentlyPlaying.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport spotifyApi from '../spotifyAuth';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction CurrentlyPlaying({ setFavorites }) {\r\n  const [currentTrack, setCurrentTrack] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch the user's currently playing track\r\n    spotifyApi.getMyCurrentPlayingTrack().then((response) => {\r\n      setCurrentTrack(response.item);\r\n    });\r\n  }, []);\r\n\r\n  const isTrackInFavorites = (track) => {\r\n    return (\r\n      track &&\r\n      track.id &&\r\n      favorites &&\r\n      Array.isArray(favorites) &&\r\n      favorites.some((fav) => fav && fav.id === track.id)\r\n    );\r\n  };\r\n\r\n  const handleAddToFavorites = (track) => {\r\n    setFavorites((prevFavorites) => {\r\n      const newFavorites = Array.isArray(prevFavorites) ? [...prevFavorites] : [];\r\n      newFavorites.push(track);\r\n      localStorage.setItem('favorites', JSON.stringify(newFavorites)); // Save to localStorage\r\n      return newFavorites;\r\n    });\r\n  };\r\n\r\n  const handleRemoveFromFavorites = (track) => {\r\n    if (track && track.id) {\r\n      setFavorites((prevFavorites) => {\r\n        const newFavorites = Array.isArray(prevFavorites)\r\n          ? prevFavorites.filter((fav) => fav && fav.id !== track.id)\r\n          : [];\r\n        localStorage.setItem('favorites', JSON.stringify(newFavorites)); // Save to localStorage\r\n        return newFavorites;\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Currently Playing</h2>\r\n      {currentTrack && (\r\n        <div>\r\n          <img\r\n            src={currentTrack.album.images[0].url}\r\n            alt={currentTrack.name}\r\n            className=\"album-art-currently\"\r\n          />\r\n          <div className=\"track-info\">\r\n            <p className=\"track-name\">{currentTrack.name}</p>\r\n            <p className=\"artists\">{currentTrack.artists.map((artist) => artist.name).join(', ')}</p>\r\n            {isTrackInFavorites(currentTrack) ? (\r\n              <button\r\n                onClick={() => handleRemoveFromFavorites(currentTrack)}\r\n                className=\"remove-from-favorites-button\"\r\n              >\r\n                Remove from Favorites\r\n              </button>\r\n            ) : (\r\n              <button\r\n                onClick={() => handleAddToFavorites(currentTrack)}\r\n                className=\"add-to-favorites-button\"\r\n              >\r\n                Add to Favorites\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!currentTrack && <p>No track currently playing</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nCurrentlyPlaying.propTypes = {\r\n  setFavorites: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CurrentlyPlaying;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}