{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmiln\\\\my-app\\\\src\\\\components\\\\TopTracks.js\",\n  _s = $RefreshSig$();\n// components/TopTracks/TopTracks.js\n\nimport React, { useState, useEffect } from 'react';\nimport spotifyApi from '../spotifyAuth';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TopTracks({\n  setFavorites\n}) {\n  _s();\n  const [topTracks, setTopTracks] = useState([]);\n  const [favorites, setFavoritesState] = useState([]);\n  const [showHeadline, setShowHeadline] = useState(false);\n  useEffect(() => {\n    // Fetch the user's top tracks\n    spotifyApi.getMyTopTracks({\n      limit: 50,\n      time_range: 'short_term'\n    }).then(response => {\n      setTopTracks(response.items);\n      setShowHeadline(true); // Set to true after fetching data\n    });\n  }, []);\n  useEffect(() => {\n    // Set favorites state when the favorites prop changes\n    if (setFavorites) {\n      setFavoritesState(setFavorites);\n    }\n  }, [setFavorites]);\n  const isTrackInFavorites = track => {\n    return favorites && favorites.some(fav => fav.id === track.id);\n  };\n  const handleAddToFavorites = track => {\n    setFavoritesState(prevFavorites => [...prevFavorites, track]);\n    setFavorites(prevFavorites => [...prevFavorites, track]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showHeadline && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"top-tracks-list\",\n      children: topTracks.map(track => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"top-tracks-item\",\n        children: [track.album.images.length > 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: track.album.images[2].url // Assuming you want to display the album art\n          ,\n          alt: track.name,\n          className: \"track-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"track-name\",\n            children: track.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"artists\",\n            children: track.artists.map(artist => artist.name).join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), isTrackInFavorites(track) ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveFromFavorites(track),\n            className: \"remove-from-favorites-button\",\n            children: \"Remove from Favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddToFavorites(track),\n            className: \"add-to-favorites-button\",\n            children: \"Add to Favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, track.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(TopTracks, \"oZEFzA9Adtm/XExc8WCgnViSUXQ=\");\n_c = TopTracks;\nTopTracks.propTypes = {\n  setFavorites: PropTypes.func.isRequired\n};\nexport default TopTracks;\nvar _c;\n$RefreshReg$(_c, \"TopTracks\");","map":{"version":3,"names":["React","useState","useEffect","spotifyApi","PropTypes","jsxDEV","_jsxDEV","TopTracks","setFavorites","_s","topTracks","setTopTracks","favorites","setFavoritesState","showHeadline","setShowHeadline","getMyTopTracks","limit","time_range","then","response","items","isTrackInFavorites","track","some","fav","id","handleAddToFavorites","prevFavorites","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","album","images","length","src","url","alt","name","artists","artist","join","onClick","handleRemoveFromFavorites","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["C:/Users/nmiln/my-app/src/components/TopTracks.js"],"sourcesContent":["// components/TopTracks/TopTracks.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport spotifyApi from '../spotifyAuth';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TopTracks({ setFavorites }) {\r\n  const [topTracks, setTopTracks] = useState([]);\r\n  const [favorites, setFavoritesState] = useState([]);\r\n  const [showHeadline, setShowHeadline] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch the user's top tracks\r\n    spotifyApi.getMyTopTracks({ limit: 50, time_range: 'short_term' }).then((response) => {\r\n      setTopTracks(response.items);\r\n      setShowHeadline(true); // Set to true after fetching data\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Set favorites state when the favorites prop changes\r\n    if (setFavorites) {\r\n      setFavoritesState(setFavorites);\r\n    }\r\n  }, [setFavorites]);\r\n\r\n  const isTrackInFavorites = (track) => {\r\n    return favorites && favorites.some((fav) => fav.id === track.id);\r\n  };\r\n\r\n  const handleAddToFavorites = (track) => {\r\n    setFavoritesState((prevFavorites) => [...prevFavorites, track]);\r\n    setFavorites((prevFavorites) => [...prevFavorites, track]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showHeadline && <h2>Top Tracks</h2>}\r\n      <ul className=\"top-tracks-list\">\r\n        {topTracks.map((track) => (\r\n          <li key={track.id} className=\"top-tracks-item\">\r\n            {track.album.images.length > 0 && (\r\n              <img\r\n                src={track.album.images[2].url} // Assuming you want to display the album art\r\n                alt={track.name}\r\n                className=\"track-image\"\r\n              />\r\n            )}\r\n            <div className=\"track-info\">\r\n              <p className=\"track-name\">{track.name}</p>\r\n              <p className=\"artists\">{track.artists.map((artist) => artist.name).join(', ')}</p>\r\n              {isTrackInFavorites(track) ? (\r\n                <button\r\n                  onClick={() => handleRemoveFromFavorites(track)}\r\n                  className=\"remove-from-favorites-button\"\r\n                >\r\n                  Remove from Favorites\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={() => handleAddToFavorites(track)}\r\n                  className=\"add-to-favorites-button\"\r\n                >\r\n                  Add to Favorites\r\n                </button>\r\n              )}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nTopTracks.propTypes = {\r\n  setFavorites: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TopTracks;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}